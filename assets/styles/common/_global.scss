// Extensions
%img-responsive {
  max-width: 100%;
  height: auto;
}

%list-unstyled {
  list-style: none;
  padding-left: 0;
}

%list-horizontal {
  > li {
    display: inline-block;
    margin-right: 10px;
    &:last-child {
      margin-right: 0;
    }
  }
}

%hover-to-fade {
  transition: opacity .1s linear;
  &:hover {
    opacity: .5;
  }
}

%word-wrap {
  white-space: normal;
  word-break: break-all;
  word-wrap: break-word;
}

// Mixins
@mixin respond-to($media) {
  /* Landscape phones and down */
  @if $media == xs {
    @media (max-width: $screen-sm - 1) { @content; }
  }
  /* Landscape phone to portrait tablet */
  @else if $media == sm {
    @media (min-width: $screen-sm) and (max-width: $screen-md - 1) {@content; }
  }
  /* Portrait tablet to landscape and desktop */
  @else if $media == md {
    @media (min-width: $screen-md) and (max-width: $screen-lg - 1) { @content; }
  }
  /* desktop and large desktop */
  @else if $media == lg {
    @media (min-width: $screen-lg) { @content; }
  }
}

@mixin screen($media...) {
  @each $mediatype in $media {
    @include respond-to($mediatype) {@content;}
  }
}

@mixin orient($orientation: landscape) {
  @media (orientation : $orientation) {
    @content;
  }
}
